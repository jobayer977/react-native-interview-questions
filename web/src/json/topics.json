{"1.What is a Native App?.md":[{"title":"What is a Hybrid App?","content":"\nHybrid app is a combination of both native and web apps. Where need to embed the code written in JavaScript into the native app, and the web app is used to display the content.\n","section":"1.What is a Native App?.md","source":"https://www.netsolutions.com/insights/native-vs-hybrid-vs-cross-platform/#what-is-a-native-app"}],"10. How React Native is different from React?.md":[{"title":"How React Native is different from React?","content":"\nReact is an open-source JS library for building the UIs for web applications; besides, React Native is used to building rich mobile UI from declarative components using only JavaScript.\n","section":"10. How React Native is different from React?.md","source":"https://stackoverflow.com"}],"11. What are the advantages of using React Native.md":[{"title":"What are the advantages of using React Native","content":"\n- Large community\n- Reuseable components\n- Live reload\n- Additional libraries\n","section":"11. What are the advantages of using React Native.md","source":"https://stackoverflow.com"}],"12. What is native module in react native.md":[{"title":"What is native module in react native ?","content":"\nNative Module is a way to communicate between React Native and native code. It is a bridge between React Native and Platform native code. Native modules are used to access platform capabilities, such as accessing the phone camera, accessing the phone storage, accessing the userâ€™s location, etc.\n","section":"12. What is native module in react native.md","source":"https://stackoverflow.com"}],"13. What is difference between React Native and Expo?.md":[{"title":"What is the difference between React Native and Expo?","content":"","section":"13. What is difference between React Native and Expo?.md","source":"https://stackoverflow.com"}],"14. What is Expo CLI in React Native?.md":[{"title":"What is Expo CLI in React Native?","content":"\nExpo CLI is a command line interface for developing Expo apps. It is a tool for creating, building, and publishing react-native apps. It provides a development server that allows us to easily run our app on our device. It also provides a way to publish our app to the Expo app store.\n","section":"14. What is Expo CLI in React Native?.md","source":"https://stackoverflow.com"}],"15. What SDK means?.md":[{"title":"What SDK means?","content":"\nSDK stands for Software Development Kit. It is a set of tools and libraries that allow you to build applications for a specific platform. For example, Android SDK allows you to build Android apps, iOS SDK allows you to build iOS apps.\n","section":"15. What SDK means?.md","source":"https://stackoverflow.com"}],"16. What is native components in react native.md":[{"title":"What are native components in react native?","content":"\nAt runtime, React Native creates the corresponding Android and iOS views for those components. Because React Native components are backed by the same views as Android and iOS, React Native apps look, feel, and perform like any other apps. We call these platform-backed components Native Components.\n","section":"16. What is native components in react native.md","source":"https://reactnative.dev"}],"17. What are most useful core components in react native.md":[{"title":"What are most useful core components in react native","content":"\nThe core components are the building blocks of a React Native app. Here is a list of some of the most commonly used core components:\n\n- [View](https://reactnative.dev/docs/view)\n- [Text](https://reactnative.dev/docs/text)\n- [Image](https://reactnative.dev/docs/image)\n- [ScrollView](https://reactnative.dev/docs/scrollview)\n- [TextInput](https://reactnative.dev/docs/textinput)\n- [StyleSheet](https://reactnative.dev/docs/stylesheet)\n- [TouchableOpacity](https://reactnative.dev/docs/touchableopacity)\n- [TouchableHighlight](https://reactnative.dev/docs/touchablehighlight)\n- [FlatList](https://reactnative.dev/docs/flatlist)\n- [SectionList](https://reactnative.dev/docs/sectionlist)\n","section":"17. What are most useful core components in react native.md","source":"https://reactnative.dev"}],"18. How to write platform specific code in react native.md":[{"title":"How to write platform-specific code in react native","content":"\nIn React-Native there are two ways to write platform-specific code:\n\n- Using Platform module\n- Using Platform-specific extensions\n\n**Using Platform module**\n\nFor Android\n\n```js\nimport { Platform } from 'react-native'\n\nif (Platform.OS === 'android') {\n\t// do something\n}\n```\n\nFor iOS\n\n```js\nimport { Platform } from 'react-native'\n\nif (Platform.OS === 'ios') {\n\t// do something\n}\n```\n\n**Using Platform-specific extensions**\n\nFor Android\n\n```js\nbutton.android.js\nbutton.ios.js\n```\n\n```js\nimport button from './button'\n```\n","section":"18. How to write platform specific code in react native.md","source":"https://reactnative.dev"}],"19. How can you check the device OS version in React Native?.md":[{"title":"How can you check the device OS version in React Native?","content":"\nFor Android\n\n```js\nimport { Platform } from 'react-native'\n\nif (Platform.Version === 28) {\n\t// do something\n}\n```\n\nFor iOS\n\n```js\nimport { Platform } from 'react-native'\nif (Platform.Version === '14.0') {\n\t// do something\n}\n```\n","section":"19. How can you check the device OS version in React Native?.md","source":"https://reactnative.dev"}],"2.What is a Hybrid App?.md":[{"title":"What is a Hybrid App?","content":"\nHybrid apps are essentially web apps that have been put in a native app shell. Once they are downloaded from an app store and installed locally, the shell is able to connect to whatever capabilities the mobile platform provides through a browser that's embedded in the app.\n","section":"2.What is a Hybrid App?.md"}],"20. What is Gradle and why it is used?.md":[{"title":"What is Gradle and why it is used?","content":"\nGradle is a build automation tool that is used to build and manage any Java-based project. It is used to build Android applications. It is open-source.\n\nIn Android, Gradle is used to build the project and manage the dependencies. It is used to compile the code, run unit tests, and generate the final APK file. It is also used to manage the dependencies of the project.\n","section":"20. What is Gradle and why it is used?.md","source":"https://www.geeksforgeeks.org"}],"21. What is the AndroidManifest xml?.md":[{"title":"What is the AndroidManifest XML?","content":"\nAndroidManifest.xml is an XML file that contains information about the application. It is used to declare the components of the application, permissions, and other information about the application.\n","section":"21. What is the AndroidManifest xml?.md","source":"https://reactnative.dev"}],"22. What is Fast Refresh.md":[{"title":"What is Fast Refresh","content":"\nFast Refresh is a new feature in React Native that allows us to get direct feedback for changes in our React components. It is enabled by default in the React Native CLI.\n\nIt works for example if we change the text in the App.js file from \"Hello World\" to \"Hello World!\". it will update this component without reloading the entire application. An alterant if we have a util file and we change the file those changes will be re-render in the other files that are using that util file.\n","section":"22. What is Fast Refresh.md","source":"https://reactnative.dev"}],"23. what is library linking in react native.md":[{"title":"What is library linking in react native","content":"\nWhen a library has native module implementations. Then we have to link the library to the platform-specific native code. This is called library linking.  Linking can be done automatically or manually.\n","section":"23. what is library linking in react native.md","source":"https://reactnative.dev"}],"24. Why Test.md":[{"title":"Why Test","content":"\nTesting is an important part of software development. It is a way to ensure that the code is working as expected. It is also a way to ensure that the code is not broken when new features are added or when existing features are modified.\n","section":"24. Why Test.md","source":"https://reactnative.dev"}],"25. What is Hermes in react native?.md":[{"title":"What is Hermes in react native","content":"\nHermes is a JavaScript engine optimized for running React Native apps on Android. It improves app performance and decreases app size. Hermes is enabled by default in the latest version of React Native.","section":"25. What is Hermes in react native?.md","source":"https://reactnative.dev"}],"26. Difference between is React-native from ReactJS ?.md":[{"title":"Difference between is React-native from ReactJS ?.md","content":"\nDifference between ReactJS and React-native in Tabular form\n\n| ReactJS                                                       | React-native                                                                         |\n| ------------------------------------------------------------- | ------------------------------------------------------------------------------------ |\n| ReactJS is a JavaScript library for building user interfaces. | React Native is a JavaScript framework for building native apps for Android and iOS. |\n| It is used for development of web applications.               | It is used for developement of mobile applications.                                  |\n| It uses React-Router for routing.                             | It uses React-Navigation for routing.                                                |\n| It uses HTML tag for UI.                                      | It uses View tag for UI.                                                             |\n| In this the virtual DOM renders the browser code.             | In this the native uses it's API to render code for mobile applications.             |","section":"26. Difference between is React-native from ReactJS ?.md","source":"https://reactnative.dev"}],"27. What is Flexbox.md":[{"title":"What is Flexbox ?","content":"\n\nIt is a layout model that allows elements to be laid out in a flexible manner. It is a one-dimensional layout model, meaning that it can only handle elements that are laid out either horizontally or vertically. It is a very powerful layout model that can be used to create complex layouts.","section":"27. What is Flexbox.md","source":"https://reactnative.dev"}],"28. What are advantages of using React Native?.md":[{"title":"What are the advantages of using React Native?","content":"\n- Large community: React Native has a large community of developers who are constantly working on improving the framework. This means that we can get help from the community if we run into any issues while developing our app.\n- Reusable code: React Native allows us to reuse our code across different platforms. This means that we can write our code once and use it on both Android and iOS.\n- Additional Third-Party Libraries: React Native has a large number of third-party libraries that we can use to add additional functionality to our app. This means that we don't have to write all the code from scratch.\n","section":"28. What are advantages of using React Native?.md","source":"https://reactnative.dev"}],"29. How is user Input Handled in React Native ?.md":[{"title":"How is user Input Handled in React Native?","content":"\nTextInput is a core component of React Native that allows the user to enter text. It has an API that is very similar to that of the HTML input element, with support for auto-correction, auto-capitalization, placeholder text, and more.\n\n```jsx\nimport React, { useState } from 'react'\n\nimport { TextInput, View, StyleSheet } from 'react-native'\n\nconst App = () => {\n\tconst [value, onChangeText] = useState('Useless Placeholder')\n\n\treturn (\n\t\t<View>\n\t\t\t<TextInput onChangeText={(text) => onChangeText(text)} value={value} />\n\t\t</View>\n\t)\n}\n```\n","section":"29. How is user Input Handled in React Native ?.md","source":"https://reactnative.dev"}],"3.What is cross-platform mobile app development?.md":[{"title":"What is cross-platform mobile app development?","content":"\nCross platform framework operate to develop shareable and reusable code across multiple platforms. \"Write once, run everywhere\" is the motto of cross platform framework.\nWriting once and reuse the same on multiple platforms helps in minimizing the development time and cost and also ensure hassle-free implementation.\n**Note:** Cross-platform applications are popular in todayâ€™s times, all credits to React Native, Xamarin, and Flutter frameworks.\n","section":"3.What is cross-platform mobile app development?.md","source":"https://www.netsolutions.com/insights/native-vs-hybrid-vs-cross-platform/#what-is-a-hybrid-app"}],"30. What is a bridge in React Native ?.md":[{"title":"What is a bridge in React Native ?","content":"\nReact Native uses a bridge to communicate between the JavaScript code and the native code. The bridge is a native module that is responsible for sending messages between the JavaScript code and the native code. It is a very important part of React Native because it allows us to communicate between the JavaScript code and the native code.\n","section":"30. What is a bridge in React Native ?.md","source":"https://reactnative.dev"}],"31. What is ListView  in react-native?.md":[{"title":"What is ListView in react-native?","content":"\nReact Native ListView is a view that renders a list of items. It is a core component of React Native and is used to render a list of data. It is similar to the HTML list element.\n\n```jsx\nimport React, { useState } from 'react'\n\nimport { View, Text, StyleSheet, FlatList } from 'react-native'\n\nconst App = () => {\n\tconst [data, setData] = useState([\n\t\t{ id: 1, name: 'John Doe' },\n\t\t{ id: 2, name: 'Brad Traversy' },\n\t\t{ id: 3, name: 'Steve Smith' },\n\t\t{ id: 4, name: 'Janet Williams' },\n\t\t{ id: 5, name: 'David Doe' },\n\t\t{ id: 6, name: 'John Doe' },\n\t\t{ id: 7, name: 'Brad Traversy' },\n\t\t{ id: 8, name: 'Steve Smith' },\n\t\t{ id: 9, name: 'Janet Williams' },\n\t\t{ id: 10, name: 'David Doe' },\n\t\t{ id: 11, name: 'John Doe' },\n\t\t{ id: 12, name: 'Brad Traversy' },\n\t\t{ id: 13, name: 'Steve Smith' },\n\t\t{ id: 14, name: 'Janet Williams' },\n\t\t{ id: 15, name: 'David Doe' },\n\t])\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<FlatList\n\t\t\t\tdata={data}\n\t\t\t\trenderItem={({ item }) => <Text style={styles.item}>{item.name}</Text>}\n\t\t\t/>\n\t\t</View>\n\t)\n}\n```\n","section":"31. What is ListView  in react-native?.md","source":"https://reactnative.dev"}],"32. What are Touchable components in react Native .md":[{"title":"What are Touchable components in react Native?","content":"\nTouchable components are the most basic building blocks of React Native apps. They allow you to make views respond properly to touches. When you wrap a view with a Touchable component, you make it respond to touch events such as the press. Touchable components provide a simple interface for creating components that respond to user interactions.\n\n```jsx\nimport React from 'react'\nimport { TouchableOpacity, Text } from 'react-native'\n\nconst App = () => {\n\treturn (\n\t\t<TouchableOpacity\n\t\t\tonPress={() => console.log('Pressed')}\n\t\t\tstyle={{ backgroundColor: 'blue' }}>\n\t\t\t<Text style={{ fontSize: 20, color: 'white' }}>Press Me</Text>\n\t\t</TouchableOpacity>\n\t)\n}\n```\n","section":"32. What are Touchable components in react Native .md","source":"https://reactnative.dev"}],"33. What are the Different Ways to style React Native Application ?.md":[{"title":"What are the Different Ways to style React Native Application?","content":"\nThere are two ways to style React Native application: StyleSheet and inline styles.\n\n## StyleSheet\n\n```jsx\nimport { StyleSheet } from 'react-native'\n\nimport React from 'react'\n\nimport { View, Text, StyleSheet } from 'react-native'\n\nconst App = () => {\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<Text\n\t\t\t\tstyle={{\n\t\t\t\t\tfontSize: 20,\n\t\t\t\t}}>\n\t\t\t\tHello World\n\t\t\t</Text>\n\t\t</View>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n})\n```\n\n## Inline Styles\n\n```jsx\nimport React from 'react'\n\nimport { View, Text, StyleSheet } from 'react-native'\n\nconst App = () => {\n\treturn (\n\t\t<Text\n\t\t\tstyle={{\n\t\t\t\tfontSize: 20,\n\t\t\t}}>\n\t\t\tHello World\n\t\t</Text>\n\t)\n}\n```\n","section":"33. What are the Different Ways to style React Native Application ?.md","source":"https://reactnative.dev"}],"34. What are the disadvantages of React Native?.md":[{"title":"What are the disadvantages of React Native?","content":"\nReact Native is a great framework for building cross-platform mobile applications. However, it has some disadvantages too.\n\n- React Native is not a native app. It is a hybrid app. It is a web app that is wrapped in a native app. So, it is not as fast as a native app.\n- It takes more time to boot up than a native app.\n- Security is a concern. React Native apps are not as secure as native apps. When we choose banking apps, Expert not choose React Native apps.\n","section":"34. What are the disadvantages of React Native?.md","source":"https://reactnative.dev"}],"35. What is deep linking in react native.md":[{"title":"what is deep linking in react native","content":"\nDeep linking consists of using a uniform resource identifier (URI) that links to a specific location within a mobile app rather than simply launching the app.\n","section":"35. What is deep linking in react native.md","source":"https://reactnative.dev"}],"4.When to Consider Building a Cross-platform App?.md":[{"title":"When to Consider Building a Cross-platform App?","content":"\n- We have to release a mobile app for both Android and iOS in limited time ,resources and budget.\n- Need to target both Android and iOS platforms.\n- Need faster development.\n- The app isnâ€™t complex and doesnâ€™t need functionalities which vary much between the platforms.\n","section":"4.When to Consider Building a Cross-platform App?.md","source":"https://www.netsolutions.com"}],"5.What is React Native and why it is used?.md":[{"title":"What is React Native and why it is used?","content":"\nReact Native is an open-source JavaScript framework, designed for building apps on multiple platforms like iOS, Android, and also web applications, utilizing the very same code base. It is based on React, and it brings all its glory to mobile app development.\n","section":"5.What is React Native and why it is used?.md","source":"https://reactjs.org/"}],"6.How react native works internally.md":[{"title":"How react native works internally","content":"\nReact Native allows developers to build apps by spinning up JS threads that interpret JavaScript code, by making a native bridge between the app and the target platform. The bridge concept leverages the library and transfers the componentâ€™s hierarchy to the mobile devices view.\n\nFor instance, if the user presses a button, this case is translated into an event that JavaScript can handle. After that, by relaying messages between native platforms and JS code, the React Native bridges translates native events into something that React components can understand and work with.\n","section":"6.How react native works internally.md","source":"https://www.reactnative.guide/"}],"7.React Native Threading Model.md":[{"title":"What is React Native Threading Model ?","content":"\nThere are 3 main threads in React Native:\n\n1. Main thread\n2. JS Thread\n3. Native Modules Thread\n\n**Main thread**\nThe Main thread listens to the UI events like 'press', 'touch', etc. These events are then passed to the JS thread via the RN Bridge. Once the Javascript loads, the JS thread sends the information on what needs to be rendered onto the screen.\n\n**JS Thread**\nThe Javascript Queue is the thread queue where the main bundled JS thread runs. The JS thread runs all the business logic, i.e., the code we write in React Native.\n\n**Native Modules Thread**\nIf an app needs access to platform API, this is where the magic happens.\n","section":"7.React Native Threading Model.md","source":"https://digitalya.co/"}],"8. What does React Native use to allow JavaScript to be executed on iOS and Android natively?.md":[{"title":"What does React Native use to allow JavaScript to be executed on iOS and Android natively?","content":"\nOn iOS simulators and devices, Android emulators and devices React Native uses JavaScriptCore which is the JavaScript engine that powers Safari. Our bundle contains the JS code. And it runs on the JavaScriptCore engine. And communicates with the native code through a bridge.\n","section":"8. What does React Native use to allow JavaScript to be executed on iOS and Android natively?.md","source":"https://stackoverflow.com"}],"9. Does React Native use a WebView?.md":[{"title":"Does React Native use a WebView?","content":"\nReact Native uses a JavaScript runtime, but the UI is not HTML and it doesn't use a WebView. We use JSX and React Native-specific components to define the UI. It provides a native-level performance and looks and feels but some UI parts have to be configured separately for iOS and Android.\n","section":"9. Does React Native use a WebView?.md","source":"https://stackoverflow.com"}]}